{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDislay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","map","_","index","col","row","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","setStage","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","reduce","ack","findIndex","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","updatePlayerPos","playerRotate","rowsCleared","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b294f5b0.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[0].length; x += 1) {\r\n      // 1. Confirm that we are on a tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          // 2. check that movement is inside of canvas height\r\n          // we should not be able to go through floor\r\n          !stage[y + player.pos.y + moveY] ||\r\n          // 3. check that movement is inside of canvas width\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          // 4. confirm that cell !== clear\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            \"clear\"\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bg.png'\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\nwidth: 100vw;\r\nheight: 100vh;\r\nbackground: url(${bgImage}) #000;\r\nbackground-size: cover;\r\noverflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\ndisplay: flex;\r\nalign-items: flex-start;\r\npadding: 40px;\r\nmargin: 0 auto;\r\nmax-width: 900px;\r\naside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0px 20px;\r\n}\r\n`","export const TETROMINOS = {\r\n    0: { shape: [[0]],\r\n        color: '0, 0, 0'},\r\n    I: {\r\n        shape: [\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0]\r\n               ],\r\n        color: '80, 227, 230'\r\n    },\r\n    J: {\r\n        shape: [\r\n                [0, 'J', 0],\r\n                [0, 'J', 0],\r\n                ['J', 'J', 0]\r\n               ],\r\n        color: '36, 95, 223'\r\n    },\r\n    L: {\r\n        shape: [\r\n                [0, 'L', 0],\r\n                [0, 'L', 0],\r\n                [0, 'L', 'L']\r\n               ],\r\n        color: '223, 173, 36'\r\n    },\r\n    O: {\r\n        shape: [\r\n                ['O', 'O'],\r\n                ['O', 'O']\r\n               ],\r\n        color: '223, 217, 36'\r\n    },\r\n    S: {\r\n        shape: [\r\n                [0, 'S', 'S'],\r\n                ['S', 'S', 0],\r\n                [0, 0, 0]\r\n               ],\r\n        color: '48, 211, 56'\r\n    },\r\n    T: {\r\n        shape: [\r\n                [0, 0, 0],\r\n                ['T', 'T', 'T'],\r\n                [0, 'T', 0]\r\n               ],\r\n        color: '132, 61, 198'\r\n    },\r\n    Z: {\r\n        shape: [\r\n                ['Z', 'Z', 0],\r\n                [0, 'Z', 'Z'],\r\n                [0, 0, 0]\r\n               ],\r\n        color: '227, 78, 78'\r\n    }\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = \r\n        tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n return TETROMINOS[randTetromino]\r\n}","import {useState, useCallback} from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers'\r\n\r\nexport const usePlayer = () => {\r\n\r\n    const [player, setPlayer] = useState({\r\n        pos: { x: 0, y: 0},\r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false\r\n    });\r\n//performs rotation\r\n    const rotate = (matrix, dir) => {\r\n      // change tetromino rows into columns (transpose)\r\n      const rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]),\r\n      );\r\n      //reverse each row to get the rotated matrix\r\n      if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n      return rotatedTetro.reverse();\r\n    };\r\n\r\n    //checks collisions\r\n    const playerRotate = (stage, dir) => {\r\n      const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n      clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n      const pos = clonedPlayer.pos.x;\r\n      let offset = 1;\r\n      while(checkCollision(clonedPlayer, stage, { x: 0, y: 0})) {\r\n        clonedPlayer.pos.x += offset;\r\n        offset = -(offset + (offset < 0 ? 1 : -1));\r\n        if ( offset > clonedPlayer.tetromino[0].length) {\r\n          rotate(clonedPlayer.tetromino, -dir);\r\n          clonedPlayer.pos.x = pos;\r\n          return;\r\n        }\r\n      }\r\n      setPlayer(clonedPlayer)\r\n    } \r\n\r\n    const updatePlayerPos = ({ x, y, collided }) => {\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n            collided,\r\n        }))\r\n    }\r\n    \r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    })\r\n  }, [])\r\n    \r\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n}","import { useState, useEffect } from \"react\";\r\nimport { createStage } from \"../gameHelpers\";\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n\r\n    const updateStage = prevStage => {\r\n      //First flush the stage\r\n\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\r\n      );\r\n\r\n      // Then draw the tetrimino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? \"merged\" : \"clear\"}`\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then check if we collided\r\n\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage(prev => updateStage(prev));\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(25vw/ ${props => props.width})\r\n);\r\ngrid-template-columns: repeat(${props => props.width}, 1fr);\r\ngrid-gap: 1px;\r\nborder: 2px solid #333;\r\nwidth: 100%;\r\nmax-width: 25vw;\r\nbackground: #111;\r\n`","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\nwidth: auto;\r\nbackground: rgba(${props => props.color}, 0.8);\r\nborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\nborder-bottom-color: rgba(${props => props.color}, 0.1);\r\nborder-right-color: rgba(${props => props.color}, 1);\r\nborder-top-color: rgba(${props => props.color}, 1);\r\nborder-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react';\r\nimport {StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color} />\r\n);\r\n\r\nexport default React.memo(Cell);","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage'\r\n\r\nimport Cell from './Cell';\r\n\r\n\r\nconst Stage = ({ stage }) => (\r\n <StyledStage width={stage[0].length} height={stage.length}>\r\n     {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n \r\n </StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 0 0 20px 0;\r\npadding: 20px;\r\nborder: 4px solid #333;\r\nmin-height: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\ncolor: ${props => (props.gameOver ? ' red' : '#999')};\r\nbackground: #000;\r\nfont-family: Pixel, Arial, Helvetica, sans-serrif;\r\nfont-size: 0.8rem;\r\n`","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDislay'\r\n\r\nconst Display = ({ gameOver, text}) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n);\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\nbox-sizing: border-box;\r\nmagin: 0, 0, 20px, 0;\r\npadding: 20px;\r\nmin-height: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\nborder: none;\r\ncolor: white;\r\nbackground: #333;\r\nfont-family: Pixel, Arial, Helvetica, sans-serif;\r\nfont-size: 1rem;\r\noutline: none;\r\ncursor: pointer;\r\n`","import React from 'react';\r\nimport {StyledStartButton} from './styles/StyledStartButton'\r\n\r\nconst StartButton = ({ callback }) => (\r\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;","import React, { useState } from \"react\";\r\n\r\nimport { createStage, checkCollision } from \"../gameHelpers\";\r\n\r\n//Styled components\r\nimport { StyledTetris, StyledTetrisWrapper } from \"./styles/StyledTetris\";\r\n\r\n//Custom hooks\r\nimport { useInterval } from \"../hooks/useInterval\";\r\nimport { usePlayer } from \"../hooks/usePlayer\";\r\nimport { useStage } from \"../hooks/useStage\";\r\nimport { useGameStatus } from \"../hooks/useGameStatus\";\r\n\r\n//components\r\nimport Stage from \"./Stage\";\r\nimport Display from \"./Display\";\r\nimport StartButton from \"./StartButton\";\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared ] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel ] = useGameStatus(rowsCleared);\r\n\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    //reset everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  };\r\n\r\n  const drop = () => {\r\n      //increase level when player has cleared 10 rows\r\n    if (rows > ( level + 1) * 10) {\r\n        setLevel(prev => prev + 1);\r\n        //also increase speed\r\n        setDropTime( 1000 / (level + 1) + 200);\r\n    } \r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      //Game over\r\n      if (player.pos.y < 1) {\r\n        console.log(\"Game Over\");\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n      if (!gameOver) {\r\n          if (keyCode === 40) {\r\n              setDropTime( 1000 / (level + 1) + 200);\r\n          }\r\n      }\r\n  }\r\n\r\n  const dropPlayer = () => {\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  return (\r\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`Rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n\r\n    const linePoints = [40, 100, 300, 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        //Do we have score?\r\n        if (rowsCleared > 0) {\r\n            //this is how original tetris scoring is calculated\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    },[level, linePoints, rowsCleared]);\r\n\r\n    useEffect(()=> {\r\n        calcScore();\r\n    }, [calcScore, rowsCleared, score])\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel]\r\n\r\n}","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className='App'>\n    <Tetris />\n  </div>\n\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}